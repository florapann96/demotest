var express = require('express');
var router = express.Router();
var mkdirp = require('mkdirp');
var fs = require('fs-extra');
var resizeImg = require('resize-img');
var auth = require('../config/auth');
var isAdmin = auth.isAdmin;

// Get Category model
var Author = require('../models/author');

/*
 * GET category index
 */
router.get('/', isAdmin, function (req, res) {
    Author.find(function (err, author) {
        if (err)
            return console.log(err);
        res.render('admin/author', {
            author: author
        });
    });
});

/*
 * GET add category
 */
router.get('/add-author', isAdmin, function (req, res) {

    var name = "";
    var contact = "";
    var socialname = "";
    var social = "";

    res.render('admin/add_author', {
        name: name,
        contact: contact,
        socialname: socialname,
        social: social
    });

});

/*
 * POST add category
 */
//router.post('/add-author', function (req, res) {
//    if (!req.files) { imageFile = ""; }
//    if (req.files) {

//        var imageFile = typeof (req.files.image) !== "undefined " ? req.files.image.name : "";
       
//    }
//    req.checkBody('name', 'name must have a value.').notEmpty();

//    var name = req.body.name;
//    var contact = req.body.contact;
//    var socialname = req.body.socialname;
//    var social = req.body.social;
//    var slug = name.replace(/\s+/g, '-').toLowerCase();

//    var errors = req.validationErrors();

//    if (errors) {
//        res.render('admin/add_author', {
//            errors: errors,
//            name: name,
//            socialname: socialname,
//            social: social,
//            contact: contact
//        });
//    } else {
//        Author.findOne({ slug: slug }, function (err, author) {
//            if (author) {
//                req.flash('danger', 'author name exists, choose another.');
//                res.render('admin/add_author', {
//                    name: name,
//                    contact: contact,
//                    socialname: socialname,
//                    social: social
//                });
//            } else {
//                var author = new Author({
//                    name: name,
//                    contact: contact,
//                    socialname: socialname,
//                    social: social,
//                    slug: slug,
//                    image: imageFile
//                });

//                author.save(function (err) {
//                    if (err)
//                        return console.log(err);

//                    mkdirp('public/author_images/' + author._id, function (err) {
//                        return console.log(err);
//                    });
//                    if (imageFile != "") {
//                        var productImage = req.files.image;
//                        var path = 'public/author_images/' + author._id + '/' + imageFile;

//                        productImage.mv(path, function (err) {
//                            return console.log(err);
//                        });
//                    }
//                    Author.find(function (err, author) {
//                        if (err) {
//                            console.log(err);
//                        } else {

//                            req.app.locals.author = author;
//                        }
//                    });

//                    req.flash('success', 'Artist name added!');
//                    res.redirect('/admin/author');
//                });
//            }
//        });
//    }

//});
router.post('/add-author', function (req, res) {

    if (!req.files) { imageFile = ""; pdfFile = ""; }
    if (req.files) {

        var imageFile = typeof (req.files.image) !== "undefined " ? req.files.image.name : "";
      
    }

    req.checkBody('name', 'name must have a value.').notEmpty();
    req.checkBody('image', 'You must upload an image').isImage(imageFile);
   

    var name = req.body.name;
    var contact = req.body.contact;
    var socialname = req.body.socialname;
    var social = req.body.social;
    var slug = name.replace(/\s+/g, '-').toLowerCase();


    var errors = req.validationErrors();

    if (errors) {
        Author.find(function (err, author) {
            
            res.render('admin/add_author', {
                errors: errors,
                name: name,
                contact: contact,
                socialname: socialname,
                social: social
                
               
            });
        });
    } else {
        Author.findOne({ slug: slug }, function (err, author) {
            if (author) {
                req.flash('danger', 'Artist exists, choose another.');
                res.render('admin/add_author', {
                    name: name,
                    contact: contact,
                    socialname: socialname,
                    social: social
                });
            } else {
                var author = new Author({
                    name: name,
                    contact: contact,
                    socialname: socialname,
                    social: social,
                    slug: slug,
                    image: imageFile
                    
                });

                author.save(function (err) {
                    if (err)
                        return console.log(err);

                    mkdirp('public/author_images/' + author._id, function (err) {
                        return console.log(err);
                    });

                    mkdirp('public/author_images/' + author._id + '/gallery', function (err) {
                        return console.log(err);
                    });

                    mkdirp('public/author_images/' + author._id + '/gallery/thumbs', function (err) {
                        return console.log(err);
                    });
                    console.log('reach to this path');
                    if (imageFile != "") {
                        var productImage = req.files.image;
                        var path = 'public/author_images/' + author._id + '/' + imageFile;
                        console.log('reach to this path');
                        productImage.mv(path, function (err) {
                            return console.log(err);
                        });
                    }
                    else {
                        var productImage = req.files.image;
                        var path = 'public/author_images/' + author._id + '/' + imageFile;
                        console.log('reach to this path');
                        productImage.mv(path, function (err) {
                            return console.log(err);
                        });
                    }

                    req.flash('success', 'Author added!');
                    res.redirect('/admin/author');
                });
            }
        });
    }

});


///*
// * GET edit category
// */
//router.get('/edit-author/:id', isAdmin, function (req, res) {

//    Author.findById(req.params.id, function (err, author) {
//        if (err)
//            return console.log(err);

//        res.render('admin/edit_author', {
//            name: author.name,
//            contact: author.contact,
//            socialname: author.socialname,
//            social: author.social,
//            id: author._id
//        });
//    });

//});

///*
// * POST edit category
// */
//router.post('/edit-author/:id', function (req, res) {

//    req.checkBody('name', 'Artist name must have a value.').notEmpty();

//    var name = req.body.name;
//    var contact = req.body.contact;
//    var socialname = req.body.socialname;
//    var social = req.body.social;
//    var slug = name.replace(/\s+/g, '-').toLowerCase();
//    var id = req.params.id;

//    var errors = req.validationErrors();

//    if (errors) {
//        res.render('admin/edit_author', {
//            errors: errors,
//            name: name,
//            contact: contact,
//            socialname: socialname,
//            social: social,
//            id: id
//        });
//    } else {
//        Author.findOne({ slug: slug, _id: { '$ne': id } }, function (err, author) {
//            if (author) {
//                req.flash('danger', 'Artist Name exists, choose another.');
//                res.render('admin/edit_author', {
//                    name: name,
//                    contact: contact,
//                    socialname: socialname,
//                    social: social,
//                    id: id
//                });
//            } else {
//                Author.findById(id, function (err, author) {
//                    if (err)
//                        return console.log(err);

//                    author.name = name;
//                    author.contact = contact;
//                    author.social = social;
//                    author.socialname= socialname,
//                    author.slug = slug;

//                    author.save(function (err) {
//                        if (err)
//                            return console.log(err);

//                        Author.find(function (err, author) {
//                            if (err) {
//                                console.log(err);
//                            } else {
//                                req.app.locals.author = author;
//                            }
//                        });

//                        req.flash('success', 'Artist name edited!');
//                        res.redirect('/admin/author/edit-author/' + id);
//                    });

//                });


//            }
//        });
//    }

//});
router.get('/edit-author/:id', isAdmin, function (req, res) {

    var errors;

    if (req.session.errors)
        errors = req.session.errors;
    req.session.errors = null;

    Author.find(function (err, author) {

        
            if (err) {
                console.log(err);
                res.redirect('admin/author');
            } else {
                var galleryDir = 'public/author_images/' + author._id;
                var galleryImages = null;

                fs.readdir(galleryDir, function (err, files) {
                    if (err) {
                        console.log(err);
                    } else {
                        galleryImages = files;

                        res.render('admin/edit_author', {
                            errors: errors,
                            name: name,
                            contact: contact,
                            socialname: socialname,
                            social: social,
                            id: author._id,
                            image: p.image,  
                            galleryImages: galleryImages,
                            
                        });
                    }
                });
            }
        });

    });



/*
 * POST edit product
 */
router.post('/edit-author/:id', function (req, res) {

    if (!req.files) { imageFile = "";  }
    if (req.files) {

        var imageFile = typeof (req.files.image) !== "undefined " ? req.files.image.name : "";
        
    }

    //var imageFile = typeof req.files.image !== "undefined" ? req.files.image.name : "";
    //var pdfFile = typeof req.files.pdf !== "undefined" ? req.files.pdf.name : "";

    req.checkBody('name', 'Artist name must have a value.').notEmpty();
    req.checkBody('image', 'You must upload an image').isImage(imageFile);
   
   
    var name = req.body.name;
    var contact = req.body.contact;
    var socialname = req.body.socialname;
    var social = req.body.social;
    var slug = name.replace(/\s+/g, '-').toLowerCase();
    var id = req.params.id;
    var pimage = req.body.pimage;
   
    var errors = req.validationErrors();

    if (errors) {
        req.session.errors = errors;
        res.redirect('/admin/author/edit-author/' + id);
    } else {
        Author.findOne({ slug: slug, _id: { '$ne': id } }, function (err, author) {
            if (err)
                console.log(err);

            if (author) {
                req.flash('danger', 'Author Name exists, choose another.');
                res.redirect('/admin/author/edit-author/' + id);
            } else {
                Author.findById(id, function (err, author) {
                    if (err)
                        console.log(err);

                    author.name = name;
                    author.contact = contact;
                    author.social = social;
                    author.socialname = socialname,
                    author.slug = slug;
                    if (imageFile != "") {
                        author.image = imageFile;
                    }
                   
                    author.save(function (err) {
                        if (err)
                            console.log(err);

                        if (imageFile != "") {
                            if (pimage != "") {
                                fs.remove('public/author_images/' + id + '/' + pimage, function (err) {
                                    if (err)
                                        console.log(err);
                                });
                            }
                           
                            var productImage = req.files.image;
                          
                            var path = 'public/author_images/' + id + '/' + imageFile;
                            
                            productImage.mv(path, function (err) {
                                return console.log(err);
                            });
                          

                        }

                        req.flash('success', 'Author edited!');
                        res.redirect('/admin/author/edit-author/' + id);
                    });

                });
            }
        });
    }

});
/*
 * GET delete author
 */
//router.get('/delete-author/:id', isAdmin,function (req, res) {
//    Author.findByIdAndRemove(req.params.id, function (err) {
//        if (err)
//            return console.log(err);

//        Author.find(function (err, author) {
//            if (err) {
//                console.log(err);
//            } else {
//                req.app.locals.author = author;
//            }
//        });

//        req.flash('success', 'Artist name deleted!');
//        res.redirect('/admin/author/');
//    });
//});
router.get('/delete-author/:image', isAdmin, function (req, res) {

    var originalImage = 'public/author_images/' + req.query.id + '/gallery/' + req.params.image;
  
    var thumbImage = 'public/author_images/' + req.query.id + '/gallery/thumbs/' + req.params.image;

    fs.remove(originalImage, function (err) {
        if (err) {
            console.log(err);
        } else {
            fs.remove(thumbImage, function (err) {
                if (err) {
                    console.log(err);
                } else {
                    req.flash('success', 'author deleted!');
                    res.redirect('/admin/author/edit-author/' + req.query.id);


                }
            });
        }
    });

});

/*
 * GET delete product
 */
router.get('/delete-author/:id', isAdmin, function (req, res) {

    var id = req.params.id;
    var path = 'public/author_images/' + id;

    fs.remove(path, function (err) {
        if (err) {
            console.log(err);
        } else {
            Author.findByIdAndRemove(id, function (err) {
                console.log(err);
            });

            req.flash('success', 'Artist deleted!');
            res.redirect('/admin/author/');
        }
    });

});

// Exports
module.exports = router;